import csv
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
import seaborn as sb

csv = pd.read_csv('bank.csv')
print("*********************** Bank Marketing Dataset *************************")
print(csv)


print("*********************** Marital Replace *************************")

def dis_marital(m):
    if m == "single":
        return 0
    else:
        return 1
csv["marital"] = csv["marital"].apply(dis_marital,1)
print(csv)

print("*********************** Housing *************************")

csv["housing"] = csv["housing"].map({
    "no" : 0,
    "yes" : 1
}.get)
print(csv)

print("*********************** Loan *************************")

csv["loan"] = csv["loan"].map({
    "no" : 0,
    "yes" : 1
}.get)
print(csv)

print("*********************** Job *************************")

print(csv["job"].unique())

csv.job = csv.job.map({
    'unknown': "None",
    'admin.' : 0,
    'technician' : 1,
    'services' : 2,
    'management' : 3,
    'retired' : 4,
    'blue-collar' : 5,
    'unemployed' : 6,
    'entrepreneur' : 7,
    'housemaid' : 8,
    'self-employed' : 9,
    'student' : 10
})
print(csv)

print("*********************** Education *************************")

print(csv["education"].unique())

csv.education = csv.education.map({
    'unknown' : np.nan,
    'primary' : 0,
    'secondary' : 1,
    'tertiary' : 2
})
print(csv)

print("*********************** Default *************************")

csv.default = csv.default.map({
    "no" : 0,
    "yes" : 1
})
print(csv)

print("*********************** Balance Chart *************************")

print(csv["balance"].min())
print(csv["balance"].max())
csv["balance"] = csv["balance"].apply(lambda v: (v - csv["balance"].min())/(csv["balance"].max()-csv["balance"].min()))
print(csv)

print("*********************** Contact *************************")

print(csv["contact"].unique())

csv.contact = csv.contact.map({
    'unknown' : np.nan,
    'telephone' : 0,
    'cellular' : 1
})
print(csv)

print("*********************** Month *************************")

print(csv["month"].unique())

csv.month = csv.month.map({
    'may' : 5,
    'jun' : 6,
    'jul' : 7,
    'aug' : 8,
    'oct' : 10,
    'nov' : 11,
    'dec' : 12,
    'jan' : 1,
    'feb' : 2,
    'mar' : 3,
    'apr' : 4,
    'sep' : 9
})
print(csv)

print("*********************** Poutcome *************************")

print(csv["poutcome"].unique())
csv.poutcome = csv.poutcome.map({
    'unknown' : np.nan,
    'failure' : 0,
    'success' : 1,
    'other' : 2
})
print(csv)

print("*********************** Pdays *************************")

csv["pdays"] = csv["pdays"].apply(lambda v: (v - csv["pdays"].min())/(csv["pdays"].max()-csv["pdays"].min()))
print(csv)
csv.deposit = csv.deposit.map({
    "no" : 0,
    "yes" : 1
})
print(csv)

print("*********************** Deposit *************************")

print(csv["deposit"].unique())

csv["duration"] = csv["duration"].apply(lambda v: (v - csv["duration"].min())/(csv["duration"].max()-csv["duration"].min()))
print(csv)

print("*********************** Describe Dataset *************************")
print(csv.describe())

print("*********************** Update Dataset *************************")

csv.to_csv('bank.csv',index=False)
new_csv = pd.read_csv('bank.csv')
print(new_csv)

print(csv.corr())

print("*********************** Graph Visual *************************")

print("JOB graph visual")

sb.set_style("whitegrid")
plt.figure(figsize=(14,7))
sb.countplot(csv['job'])
plt.show()

print("Marital graph visual")

sb.set_style("whitegrid")
plt.figure(figsize=(14,7))
sb.countplot(csv['marital'])
plt.show()

print("Education graph visual")

sb.set_style("whitegrid")
plt.figure(figsize=(14,7))
sb.countplot(csv['education'])
plt.show()

print("Loan graph visual")

sb.set_style("whitegrid")
plt.figure(figsize=(14,7))
sb.countplot(csv['loan'])
plt.show()

print("Contact graph visual")

sb.set_style("whitegrid")
plt.figure(figsize=(14,7))
sb.countplot(csv['contact'])
plt.show()

print("Deposit graph visual")

sb.set_style("whitegrid")
plt.figure(figsize=(14,7))
sb.countplot(csv['deposit'])
plt.show()

print("Correlation graph visual")

plt.figure(figsize=(14,7))
cor = csv.corr()
sb.heatmap(cor,annot=True)
plt.show()

print("Age graph visual")
plt.plot(csv.age.values)
plt.show()

print("Age graph visual")
plt.hist(csv.age.values)
plt.show()

print("Full Dataset Overview")

new_csv.plot()
plt.show()

print("*********************** Program End *************************")